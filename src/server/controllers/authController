const cookieParser = require('cookie-parser');
const spotifyApi = require('../utils/apiWrapper');

const authController = {};

const { query } = require('../models/models');




// using a musician's spotify access token, get their spotify id
authController.getSpotifyId = async (req, res, next) => {
    try {
        spotifyApi.setAccessToken(req.cookies.access);
        const userData = await spotifyApi.getMe();
        if (userData.statusCode === 200) res.locals.spotifyId = userData.body.id;
        return next();
    } catch(err) {
        return next({
            log: 'error getting spotify id',
            status: err.statusCode,
            message: {error: 'failed to get spotify id'}
        });
    }
}

// given a musician's spotify id, check if they're in our database
authController.getMusicianInfo = async (req, res, next) => {
    try {
        const spotifyId = req.cookies.spotifyId;
        console.log('the hard-coded spotifyId is: ', spotifyId)
        const musicianInfoQueryString = `SELECT * FROM public.musicians WHERE spotifyid = '${spotifyId}'`;
        query(musicianInfoQueryString).then(data => {
            res.locals.musicianInfo = data.rows[0];
            return next();
        })
    } catch(err) {
        return next({
            log: 'error checking if spotify id is in our database',
            status: err.statusCode,
            message: {error: 'failed to check if spotify id is in our database'}
        });
    }
}



module.exports = authController;