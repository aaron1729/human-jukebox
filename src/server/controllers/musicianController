const db = require('../models/models.js');

const musicianController = {};





////// THIS IS SUBSUMED BY THE BELOW

// this middleware function is fed a musician's handle (saved as req.params.handle), retrieves their spotify_id from the musicians table in the database, and saves it as res.locals.spotifyId .
musicianController.getSpotifyId = (req, res, next) => {
    const {handle} = req.params;
    const values = [handle];
    const queryString = 'SELECT spotify_id FROM musicians WHERE handle = $1';
    db.query(queryString, values).then(data => {
        console.log('inside of musicianController.getSpotifyId, and the data.rows returned from the database are:', data.rows);
        res.locals.spotifyId = data.rows[0].spotify_id;
        return next();
    })
}


// this middleware function is fed a musician's handle (saved as req.params.handle), retrieves their info from the musicians table in the database, and saves it as res.locals.musicianInfo .
musicianController.getMusicianInfo = (req, res, next) => {
    try {
        const {handle} = req.params;
        const queryString = `SELECT * FROM musicians where handle = '${handle}'`;
        db.query(queryString).then(data => {
            console.log('inside of musicianController.getMusicianInfo, and the data.rows are:', data.rows);
            if (!data.rows[0]) {
                return next()
            }
            res.locals.info = data.rows[0]
            // const info = data.rows[0];
            // delete info.access;
            // delete info.spotify_id;
            // if (!info.instagram_show) {
            //     delete info.instagram;
            // };
            // if (!info.venmo_show) {
            //     delete info.venmo;
            // };
            // console.log('and now the info is:', info)
            // res.locals.info = info;
            return next();
        })
    } catch(err) {
        return next({
            log: 'error getting public musician info from database',
            status: err.statusCode,
            message: {error: 'failed to get public musician info from database'}
        })

    }
}


// this middleware function is given all of a musician's info (saved as res.locals.info) and removes the private stuff.
musicianController.removePrivateInfo = (req, res, next) => {
    delete res.locals.info.access;
    delete res.locals.info.spotify_id;
    if (!res.locals.info.instagram_show) {
        delete res.locals.info.instagram;
    }
    if (!res.locals.info.venmo_show) {
        delete res.locals.info.venmo;
    }
    console.log('after running musicianController.removePrivateInfo, the info is:', res.locals.info);
    return next();
}




module.exports = musicianController;